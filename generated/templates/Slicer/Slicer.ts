// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddedChildrenSlicer extends ethereum.Event {
  get params(): AddedChildrenSlicer__Params {
    return new AddedChildrenSlicer__Params(this);
  }
}

export class AddedChildrenSlicer__Params {
  _event: AddedChildrenSlicer;

  constructor(event: AddedChildrenSlicer) {
    this._event = event;
  }

  get slicerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ERC1155BatchReceived extends ethereum.Event {
  get params(): ERC1155BatchReceived__Params {
    return new ERC1155BatchReceived__Params(this);
  }
}

export class ERC1155BatchReceived__Params {
  _event: ERC1155BatchReceived;

  constructor(event: ERC1155BatchReceived) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class ERC1155Received extends ethereum.Event {
  get params(): ERC1155Received__Params {
    return new ERC1155Received__Params(this);
  }
}

export class ERC1155Received__Params {
  _event: ERC1155Received;

  constructor(event: ERC1155Received) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ERC721Received extends ethereum.Event {
  get params(): ERC721Received__Params {
    return new ERC721Received__Params(this);
  }
}

export class ERC721Received__Params {
  _event: ERC721Received;

  constructor(event: ERC721Received) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PaymentReceived extends ethereum.Event {
  get params(): PaymentReceived__Params {
    return new PaymentReceived__Params(this);
  }
}

export class PaymentReceived__Params {
  _event: PaymentReceived;

  constructor(event: PaymentReceived) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProductAdded extends ethereum.Event {
  get params(): ProductAdded__Params {
    return new ProductAdded__Params(this);
  }
}

export class ProductAdded__Params {
  _event: ProductAdded;

  constructor(event: ProductAdded) {
    this._event = event;
  }

  get productId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get categoryIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get isUSD(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get isMultiple(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get isInfinite(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get availableUnits(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get data(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }

  get subSlicersId(): Array<BigInt> {
    return this._event.parameters[9].value.toBigIntArray();
  }

  get subProducts(): Array<BigInt> {
    return this._event.parameters[10].value.toBigIntArray();
  }
}

export class ProductCategoryChanged extends ethereum.Event {
  get params(): ProductCategoryChanged__Params {
    return new ProductCategoryChanged__Params(this);
  }
}

export class ProductCategoryChanged__Params {
  _event: ProductCategoryChanged;

  constructor(event: ProductCategoryChanged) {
    this._event = event;
  }

  get productId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get categoryIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProductCurrencyChanged extends ethereum.Event {
  get params(): ProductCurrencyChanged__Params {
    return new ProductCurrencyChanged__Params(this);
  }
}

export class ProductCurrencyChanged__Params {
  _event: ProductCurrencyChanged;

  constructor(event: ProductCurrencyChanged) {
    this._event = event;
  }

  get productId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get productPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isUSD(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class ProductInfoChanged extends ethereum.Event {
  get params(): ProductInfoChanged__Params {
    return new ProductInfoChanged__Params(this);
  }
}

export class ProductInfoChanged__Params {
  _event: ProductInfoChanged;

  constructor(event: ProductInfoChanged) {
    this._event = event;
  }

  get productId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isInfinite(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get units(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get productPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ProductPaid extends ethereum.Event {
  get params(): ProductPaid__Params {
    return new ProductPaid__Params(this);
  }
}

export class ProductPaid__Params {
  _event: ProductPaid;

  constructor(event: ProductPaid) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get productId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get quantity(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get productPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ProductRemoved extends ethereum.Event {
  get params(): ProductRemoved__Params {
    return new ProductRemoved__Params(this);
  }
}

export class ProductRemoved__Params {
  _event: ProductRemoved;

  constructor(event: ProductRemoved) {
    this._event = event;
  }

  get productId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SLCPaid extends ethereum.Event {
  get params(): SLCPaid__Params {
    return new SLCPaid__Params(this);
  }
}

export class SLCPaid__Params {
  _event: SLCPaid;

  constructor(event: SLCPaid) {
    this._event = event;
  }

  get serviceIds(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }

  get quantities(): Array<i32> {
    return this._event.parameters[1].value.toI32Array();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TriggeredRelease extends ethereum.Event {
  get params(): TriggeredRelease__Params {
    return new TriggeredRelease__Params(this);
  }
}

export class TriggeredRelease__Params {
  _event: TriggeredRelease;

  constructor(event: TriggeredRelease) {
    this._event = event;
  }

  get payee(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get released(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Slicer__slicerInfoResult {
  value0: BigInt;
  value1: i32;
  value2: Address;
  value3: BigInt;

  constructor(value0: BigInt, value1: i32, value2: Address, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class Slicer__validatePurchaseResult {
  value0: BigInt;
  value1: Bytes;

  constructor(value0: BigInt, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }
}

export class Slicer extends ethereum.SmartContract {
  static bind(address: Address): Slicer {
    return new Slicer("Slicer", address);
  }

  isPayeeAllowed(payee: Address): boolean {
    let result = super.call(
      "isPayeeAllowed",
      "isPayeeAllowed(address):(bool)",
      [ethereum.Value.fromAddress(payee)]
    );

    return result[0].toBoolean();
  }

  try_isPayeeAllowed(payee: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPayeeAllowed",
      "isPayeeAllowed(address):(bool)",
      [ethereum.Value.fromAddress(payee)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  onERC1155BatchReceived(
    param0: Address,
    from: Address,
    tokenIds: Array<BigInt>,
    amounts: Array<BigInt>,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigIntArray(tokenIds),
        ethereum.Value.fromUnsignedBigIntArray(amounts),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    param0: Address,
    from: Address,
    tokenIds: Array<BigInt>,
    amounts: Array<BigInt>,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigIntArray(tokenIds),
        ethereum.Value.fromUnsignedBigIntArray(amounts),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    param0: Address,
    from: Address,
    tokenId: BigInt,
    amount: BigInt,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    param0: Address,
    from: Address,
    tokenId: BigInt,
    amount: BigInt,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC721Received(
    param0: Address,
    from: Address,
    tokenId: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    from: Address,
    tokenId: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  productPrice(productId: BigInt): BigInt {
    let result = super.call("productPrice", "productPrice(uint32):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(productId)
    ]);

    return result[0].toBigInt();
  }

  try_productPrice(productId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "productPrice",
      "productPrice(uint32):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(productId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  release(account: Address): BigInt {
    let result = super.call("release", "release(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_release(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("release", "release(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  released(account: Address): BigInt {
    let result = super.call("released", "released(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_released(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("released", "released(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  slicerInfo(): Slicer__slicerInfoResult {
    let result = super.call(
      "slicerInfo",
      "slicerInfo():(uint256,uint8,address,uint256)",
      []
    );

    return new Slicer__slicerInfoResult(
      result[0].toBigInt(),
      result[1].toI32(),
      result[2].toAddress(),
      result[3].toBigInt()
    );
  }

  try_slicerInfo(): ethereum.CallResult<Slicer__slicerInfoResult> {
    let result = super.tryCall(
      "slicerInfo",
      "slicerInfo():(uint256,uint8,address,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Slicer__slicerInfoResult(
        value[0].toBigInt(),
        value[1].toI32(),
        value[2].toAddress(),
        value[3].toBigInt()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalReceived(): BigInt {
    let result = super.call("totalReceived", "totalReceived():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalReceived(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalReceived",
      "totalReceived():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  unreleased(account: Address): BigInt {
    let result = super.call("unreleased", "unreleased(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_unreleased(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("unreleased", "unreleased(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  validatePurchase(productId: BigInt): Slicer__validatePurchaseResult {
    let result = super.call(
      "validatePurchase",
      "validatePurchase(uint32):(uint256,bytes)",
      [ethereum.Value.fromUnsignedBigInt(productId)]
    );

    return new Slicer__validatePurchaseResult(
      result[0].toBigInt(),
      result[1].toBytes()
    );
  }

  try_validatePurchase(
    productId: BigInt
  ): ethereum.CallResult<Slicer__validatePurchaseResult> {
    let result = super.tryCall(
      "validatePurchase",
      "validatePurchase(uint32):(uint256,bytes)",
      [ethereum.Value.fromUnsignedBigInt(productId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Slicer__validatePurchaseResult(
        value[0].toBigInt(),
        value[1].toBytes()
      )
    );
  }
}

export class _addChildrenSlicerCall extends ethereum.Call {
  get inputs(): _addChildrenSlicerCall__Inputs {
    return new _addChildrenSlicerCall__Inputs(this);
  }

  get outputs(): _addChildrenSlicerCall__Outputs {
    return new _addChildrenSlicerCall__Outputs(this);
  }
}

export class _addChildrenSlicerCall__Inputs {
  _call: _addChildrenSlicerCall;

  constructor(call: _addChildrenSlicerCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _addChildrenSlicerCall__Outputs {
  _call: _addChildrenSlicerCall;

  constructor(call: _addChildrenSlicerCall) {
    this._call = call;
  }
}

export class _addPayeesCall extends ethereum.Call {
  get inputs(): _addPayeesCall__Inputs {
    return new _addPayeesCall__Inputs(this);
  }

  get outputs(): _addPayeesCall__Outputs {
    return new _addPayeesCall__Outputs(this);
  }
}

export class _addPayeesCall__Inputs {
  _call: _addPayeesCall;

  constructor(call: _addPayeesCall) {
    this._call = call;
  }

  get accounts(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get shares_(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class _addPayeesCall__Outputs {
  _call: _addPayeesCall;

  constructor(call: _addPayeesCall) {
    this._call = call;
  }
}

export class _initializeCall extends ethereum.Call {
  get inputs(): _initializeCall__Inputs {
    return new _initializeCall__Inputs(this);
  }

  get outputs(): _initializeCall__Outputs {
    return new _initializeCall__Outputs(this);
  }
}

export class _initializeCall__Inputs {
  _call: _initializeCall;

  constructor(call: _initializeCall) {
    this._call = call;
  }

  get tokenId_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get slicerCreator_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get minimumShares_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get isCollectible_(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class _initializeCall__Outputs {
  _call: _initializeCall;

  constructor(call: _initializeCall) {
    this._call = call;
  }
}

export class _payProductFromSliceCall extends ethereum.Call {
  get inputs(): _payProductFromSliceCall__Inputs {
    return new _payProductFromSliceCall__Inputs(this);
  }

  get outputs(): _payProductFromSliceCall__Outputs {
    return new _payProductFromSliceCall__Outputs(this);
  }
}

export class _payProductFromSliceCall__Inputs {
  _call: _payProductFromSliceCall;

  constructor(call: _payProductFromSliceCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get productId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get quantity(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class _payProductFromSliceCall__Outputs {
  _call: _payProductFromSliceCall;

  constructor(call: _payProductFromSliceCall) {
    this._call = call;
  }
}

export class _payProductFromSlicerCall extends ethereum.Call {
  get inputs(): _payProductFromSlicerCall__Inputs {
    return new _payProductFromSlicerCall__Inputs(this);
  }

  get outputs(): _payProductFromSlicerCall__Outputs {
    return new _payProductFromSlicerCall__Outputs(this);
  }
}

export class _payProductFromSlicerCall__Inputs {
  _call: _payProductFromSlicerCall;

  constructor(call: _payProductFromSlicerCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get productId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get quantity(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class _payProductFromSlicerCall__Outputs {
  _call: _payProductFromSlicerCall;

  constructor(call: _payProductFromSlicerCall) {
    this._call = call;
  }
}

export class _updatePayeesCall extends ethereum.Call {
  get inputs(): _updatePayeesCall__Inputs {
    return new _updatePayeesCall__Inputs(this);
  }

  get outputs(): _updatePayeesCall__Outputs {
    return new _updatePayeesCall__Outputs(this);
  }
}

export class _updatePayeesCall__Inputs {
  _call: _updatePayeesCall;

  constructor(call: _updatePayeesCall) {
    this._call = call;
  }

  get accountFrom(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get accountTo(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get transferredShares(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class _updatePayeesCall__Outputs {
  _call: _updatePayeesCall;

  constructor(call: _updatePayeesCall) {
    this._call = call;
  }
}

export class AddProductCall extends ethereum.Call {
  get inputs(): AddProductCall__Inputs {
    return new AddProductCall__Inputs(this);
  }

  get outputs(): AddProductCall__Outputs {
    return new AddProductCall__Outputs(this);
  }
}

export class AddProductCall__Inputs {
  _call: AddProductCall;

  constructor(call: AddProductCall) {
    this._call = call;
  }

  get categoryIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get isUSD(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get isMultiple(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get isInfinite(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }

  get units(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get purchaseData(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }

  get subSlicersId_(): Array<BigInt> {
    return this._call.inputValues[8].value.toBigIntArray();
  }

  get subProducts_(): Array<BigInt> {
    return this._call.inputValues[9].value.toBigIntArray();
  }
}

export class AddProductCall__Outputs {
  _call: AddProductCall;

  constructor(call: AddProductCall) {
    this._call = call;
  }
}

export class OnERC1155BatchReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155BatchReceivedCall__Inputs {
    return new OnERC1155BatchReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155BatchReceivedCall__Outputs {
    return new OnERC1155BatchReceivedCall__Outputs(this);
  }
}

export class OnERC1155BatchReceivedCall__Inputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155BatchReceivedCall__Outputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC1155ReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155ReceivedCall__Inputs {
    return new OnERC1155ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155ReceivedCall__Outputs {
    return new OnERC1155ReceivedCall__Outputs(this);
  }
}

export class OnERC1155ReceivedCall__Inputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155ReceivedCall__Outputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class PaySLCCall extends ethereum.Call {
  get inputs(): PaySLCCall__Inputs {
    return new PaySLCCall__Inputs(this);
  }

  get outputs(): PaySLCCall__Outputs {
    return new PaySLCCall__Outputs(this);
  }
}

export class PaySLCCall__Inputs {
  _call: PaySLCCall;

  constructor(call: PaySLCCall) {
    this._call = call;
  }

  get serviceIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get quantities(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }
}

export class PaySLCCall__Outputs {
  _call: PaySLCCall;

  constructor(call: PaySLCCall) {
    this._call = call;
  }
}

export class ReleaseCall extends ethereum.Call {
  get inputs(): ReleaseCall__Inputs {
    return new ReleaseCall__Inputs(this);
  }

  get outputs(): ReleaseCall__Outputs {
    return new ReleaseCall__Outputs(this);
  }
}

export class ReleaseCall__Inputs {
  _call: ReleaseCall;

  constructor(call: ReleaseCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ReleaseCall__Outputs {
  _call: ReleaseCall;

  constructor(call: ReleaseCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RemoveProductCall extends ethereum.Call {
  get inputs(): RemoveProductCall__Inputs {
    return new RemoveProductCall__Inputs(this);
  }

  get outputs(): RemoveProductCall__Outputs {
    return new RemoveProductCall__Outputs(this);
  }
}

export class RemoveProductCall__Inputs {
  _call: RemoveProductCall;

  constructor(call: RemoveProductCall) {
    this._call = call;
  }

  get productId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveProductCall__Outputs {
  _call: RemoveProductCall;

  constructor(call: RemoveProductCall) {
    this._call = call;
  }
}

export class SetProductCategoryCall extends ethereum.Call {
  get inputs(): SetProductCategoryCall__Inputs {
    return new SetProductCategoryCall__Inputs(this);
  }

  get outputs(): SetProductCategoryCall__Outputs {
    return new SetProductCategoryCall__Outputs(this);
  }
}

export class SetProductCategoryCall__Inputs {
  _call: SetProductCategoryCall;

  constructor(call: SetProductCategoryCall) {
    this._call = call;
  }

  get productId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get categoryIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetProductCategoryCall__Outputs {
  _call: SetProductCategoryCall;

  constructor(call: SetProductCategoryCall) {
    this._call = call;
  }
}

export class SetProductInfoCall extends ethereum.Call {
  get inputs(): SetProductInfoCall__Inputs {
    return new SetProductInfoCall__Inputs(this);
  }

  get outputs(): SetProductInfoCall__Outputs {
    return new SetProductInfoCall__Outputs(this);
  }
}

export class SetProductInfoCall__Inputs {
  _call: SetProductInfoCall;

  constructor(call: SetProductInfoCall) {
    this._call = call;
  }

  get productId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get isInfinite(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get newUnits(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get newPrice(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetProductInfoCall__Outputs {
  _call: SetProductInfoCall;

  constructor(call: SetProductInfoCall) {
    this._call = call;
  }
}

export class ToggleUSDPriceCall extends ethereum.Call {
  get inputs(): ToggleUSDPriceCall__Inputs {
    return new ToggleUSDPriceCall__Inputs(this);
  }

  get outputs(): ToggleUSDPriceCall__Outputs {
    return new ToggleUSDPriceCall__Outputs(this);
  }
}

export class ToggleUSDPriceCall__Inputs {
  _call: ToggleUSDPriceCall;

  constructor(call: ToggleUSDPriceCall) {
    this._call = call;
  }

  get productId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get isUSD(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class ToggleUSDPriceCall__Outputs {
  _call: ToggleUSDPriceCall;

  constructor(call: ToggleUSDPriceCall) {
    this._call = call;
  }
}
