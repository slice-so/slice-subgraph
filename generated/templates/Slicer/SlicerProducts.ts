// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ProductAdded extends ethereum.Event {
  get params(): ProductAdded__Params {
    return new ProductAdded__Params(this);
  }
}

export class ProductAdded__Params {
  _event: ProductAdded;

  constructor(event: ProductAdded) {
    this._event = event;
  }

  get categoryIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isUSD(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get isMultiple(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get isInfinite(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get availableUnits(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get data(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }
}

export class ProductCategoryChanged extends ethereum.Event {
  get params(): ProductCategoryChanged__Params {
    return new ProductCategoryChanged__Params(this);
  }
}

export class ProductCategoryChanged__Params {
  _event: ProductCategoryChanged;

  constructor(event: ProductCategoryChanged) {
    this._event = event;
  }

  get productId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get categoryIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProductCurrencyChanged extends ethereum.Event {
  get params(): ProductCurrencyChanged__Params {
    return new ProductCurrencyChanged__Params(this);
  }
}

export class ProductCurrencyChanged__Params {
  _event: ProductCurrencyChanged;

  constructor(event: ProductCurrencyChanged) {
    this._event = event;
  }

  get productId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get productPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isUSD(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class ProductInfoChanged extends ethereum.Event {
  get params(): ProductInfoChanged__Params {
    return new ProductInfoChanged__Params(this);
  }
}

export class ProductInfoChanged__Params {
  _event: ProductInfoChanged;

  constructor(event: ProductInfoChanged) {
    this._event = event;
  }

  get productId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isInfinite(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get units(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get productPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ProductPaid extends ethereum.Event {
  get params(): ProductPaid__Params {
    return new ProductPaid__Params(this);
  }
}

export class ProductPaid__Params {
  _event: ProductPaid;

  constructor(event: ProductPaid) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get productId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get quantity(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get productPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ProductRemoved extends ethereum.Event {
  get params(): ProductRemoved__Params {
    return new ProductRemoved__Params(this);
  }
}

export class ProductRemoved__Params {
  _event: ProductRemoved;

  constructor(event: ProductRemoved) {
    this._event = event;
  }

  get productId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SlicerProducts__productPriceResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }
}

export class SlicerProducts extends ethereum.SmartContract {
  static bind(address: Address): SlicerProducts {
    return new SlicerProducts("SlicerProducts", address);
  }

  productPrice(productId: BigInt): SlicerProducts__productPriceResult {
    let result = super.call(
      "productPrice",
      "productPrice(uint32):(uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(productId)]
    );

    return new SlicerProducts__productPriceResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try_productPrice(
    productId: BigInt
  ): ethereum.CallResult<SlicerProducts__productPriceResult> {
    let result = super.tryCall(
      "productPrice",
      "productPrice(uint32):(uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(productId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SlicerProducts__productPriceResult(
        value[0].toBigInt(),
        value[1].toBoolean()
      )
    );
  }
}
